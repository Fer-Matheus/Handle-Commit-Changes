: "diff --git a/android/build.gradle b/android/build.gradle\nindex 333d69c..28e43a9 100755\n--- a/android/build.gradle\n+++ b/android/build.gradle\n@@ -1,24 +1,27 @@\n buildscript {\n   repositories {\n     jcenter()\n+    maven {\n+      url 'https://maven.google.com'\n+    }\n   }\n \n   dependencies {\n-    classpath 'com.android.tools.build:gradle:1.2.3'\n+    classpath 'com.android.tools.build:gradle:3.0.0'\n   }\n }\n \n apply plugin: 'com.android.library'\n \n android {\n-  compileSdkVersion 25\n-  buildToolsVersion \"25.0.2\"\n+  compileSdkVersion 26\n+    buildToolsVersion \"26.0.2\"\n \n   defaultConfig {\n     minSdkVersion 16\n-    targetSdkVersion 22\n+    targetSdkVersion 26\n     versionCode 1\n-    versionName \"1.0\"\n+    versionName \"1.0.0\"\n   }\n   lintOptions {\n     abortOnError false\n@@ -28,10 +31,18 @@ android {\n \n repositories {\n   mavenCentral()\n+  maven {\n+   url 'https://maven.google.com'\n+  }\n+  maven { url \"https://jitpack.io\" }\n }\n \n dependencies {\n-  compile \"com.facebook.react:react-native:0.19.+\"\n+  compile 'com.facebook.react:react-native:+'\n   compile \"com.google.zxing:core:3.2.1\"\n   compile \"com.drewnoakes:metadata-extractor:2.9.1\"\n+  compile 'com.google.android.gms:play-services-vision:+'\n+  compile \"com.android.support:exifinterface:26.0.2\"\n+\n+  compile 'com.github.react-native-community:cameraview:df60b07573'\n }\ndiff --git a/android/gradle/wrapper/gradle-wrapper.jar b/android/gradle/wrapper/gradle-wrapper.jar\nnew file mode 100644\nindex 0000000..13372ae\nBinary files /dev/null and b/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/android/gradle/wrapper/gradle-wrapper.properties b/android/gradle/wrapper/gradle-wrapper.properties\nnew file mode 100644\nindex 0000000..bdaabfa\n--- /dev/null\n+++ b/android/gradle/wrapper/gradle-wrapper.properties\n@@ -0,0 +1,6 @@\n+#Sun Dec 31 13:43:56 BRST 2017\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.1-all.zip\ndiff --git a/android/gradlew b/android/gradlew\nnew file mode 100755\nindex 0000000..9d82f78\n--- /dev/null\n+++ b/android/gradlew\n@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\ndiff --git a/android/gradlew.bat b/android/gradlew.bat\nnew file mode 100644\nindex 0000000..aec9973\n--- /dev/null\n+++ b/android/gradlew.bat\n@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto init\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:init\r\n+@rem Get command-line arguments, handling Windowz variants\r\n+\r\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n+\r\n+:win9xME_args\r\n+@rem Slurp the command line arguments.\r\n+set CMD_LINE_ARGS=\r\n+set _SKIP=2\r\n+\r\n+:win9xME_args_slurp\r\n+if \"x%~1\" == \"x\" goto execute\r\n+\r\n+set CMD_LINE_ARGS=%*\r\n+goto execute\r\n+\r\n+:4NT_args\r\n+@rem Get arguments from the 4NT Shell from JP Software\r\n+set CMD_LINE_ARGS=%$\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe /c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit /b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\ndiff --git a/android/src/main/java/org/reactnative/MutableImage.java b/android/src/main/java/org/reactnative/MutableImage.java\nnew file mode 100644\nindex 0000000..8d5fcc3\n--- /dev/null\n+++ b/android/src/main/java/org/reactnative/MutableImage.java\n@@ -0,0 +1,272 @@\n+package org.reactnative;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.graphics.Matrix;\n+import android.media.ExifInterface;\n+import android.util.Base64;\n+import android.util.Log;\n+\n+import com.drew.imaging.ImageMetadataReader;\n+import com.drew.imaging.ImageProcessingException;\n+import com.drew.metadata.Directory;\n+import com.drew.metadata.Metadata;\n+import com.drew.metadata.MetadataException;\n+import com.drew.metadata.Tag;\n+import com.drew.metadata.exif.ExifIFD0Directory;\n+import com.facebook.react.bridge.ReadableMap;\n+\n+import java.io.BufferedInputStream;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+\n+public class MutableImage {\n+    private static final String TAG = \"RNCamera\";\n+\n+    private final byte[] originalImageData;\n+    private Bitmap currentRepresentation;\n+    private Metadata originalImageMetaData;\n+    private boolean hasBeenReoriented = false;\n+\n+    public MutableImage(byte[] originalImageData) {\n+        this.originalImageData = originalImageData;\n+        this.currentRepresentation = toBitmap(originalImageData);\n+    }\n+\n+    public void mirrorImage() throws ImageMutationFailedException {\n+        Matrix m = new Matrix();\n+\n+        m.preScale(-1, 1);\n+\n+        Bitmap bitmap = Bitmap.createBitmap(\n+                currentRepresentation,\n+                0,\n+                0,\n+                currentRepresentation.getWidth(),\n+                currentRepresentation.getHeight(),\n+                m,\n+                false\n+        );\n+\n+        if (bitmap == null)\n+            throw new ImageMutationFailedException(\"failed to mirror\");\n+\n+        this.currentRepresentation = bitmap;\n+    }\n+\n+    public void fixOrientation() throws ImageMutationFailedException {\n+        try {\n+            Metadata metadata = originalImageMetaData();\n+\n+            ExifIFD0Directory exifIFD0Directory = metadata.getFirstDirectoryOfType(ExifIFD0Directory.class);\n+            if (exifIFD0Directory == null) {\n+                return;\n+            } else if (exifIFD0Directory.containsTag(ExifIFD0Directory.TAG_ORIENTATION)) {\n+                int exifOrientation = exifIFD0Directory.getInt(ExifIFD0Directory.TAG_ORIENTATION);\n+                if(exifOrientation != 1) {\n+                    rotate(exifOrientation);\n+                    exifIFD0Directory.setInt(ExifIFD0Directory.TAG_ORIENTATION, 1);\n+                }\n+            }\n+        } catch (ImageProcessingException | IOException | MetadataException e) {\n+            throw new ImageMutationFailedException(\"failed to fix orientation\", e);\n+        }\n+    }\n+\n+    //see http://www.impulseadventure.com/photo/exif-orientation.html\n+    private void rotate(int exifOrientation) throws ImageMutationFailedException {\n+        final Matrix bitmapMatrix = new Matrix();\n+        switch (exifOrientation) {\n+            case 1:\n+                return;//no rotation required\n+            case 2:\n+                bitmapMatrix.postScale(-1, 1);\n+                break;\n+            case 3:\n+                bitmapMatrix.postRotate(180);\n+                break;\n+            case 4:\n+                bitmapMatrix.postRotate(180);\n+                bitmapMatrix.postScale(-1, 1);\n+                break;\n+            case 5:\n+                bitmapMatrix.postRotate(90);\n+                bitmapMatrix.postScale(-1, 1);\n+                break;\n+            case 6:\n+                bitmapMatrix.postRotate(90);\n+                break;\n+            case 7:\n+                bitmapMatrix.postRotate(270);\n+                bitmapMatrix.postScale(-1, 1);\n+                break;\n+            case 8:\n+                bitmapMatrix.postRotate(270);\n+                break;\n+            default:\n+                break;\n+        }\n+\n+        Bitmap transformedBitmap = Bitmap.createBitmap(\n+                currentRepresentation,\n+                0,\n+                0,\n+                currentRepresentation.getWidth(),\n+                currentRepresentation.getHeight(),\n+                bitmapMatrix,\n+                false\n+        );\n+\n+        if (transformedBitmap == null)\n+            throw new ImageMutationFailedException(\"failed to rotate\");\n+\n+        this.currentRepresentation = transformedBitmap;\n+        this.hasBeenReoriented = true;\n+    }\n+\n+    private static Bitmap toBitmap(byte[] data) {\n+        try {\n+            ByteArrayInputStream inputStream = new ByteArrayInputStream(data);\n+            Bitmap photo = BitmapFactory.decodeStream(inputStream);\n+            inputStream.close();\n+            return photo;\n+        } catch (IOException e) {\n+            throw new IllegalStateException(\"Will not happen\", e);\n+        }\n+    }\n+\n+    public String toBase64(int jpegQualityPercent) {\n+        return Base64.encodeToString(toJpeg(currentRepresentation, jpegQualityPercent), Base64.DEFAULT);\n+    }\n+\n+    public void writeDataToFile(File file, ReadableMap options, int jpegQualityPercent) throws IOException {\n+        FileOutputStream fos = new FileOutputStream(file);\n+        fos.write(toJpeg(currentRepresentation, jpegQualityPercent));\n+        fos.close();\n+\n+        try {\n+            ExifInterface exif = new ExifInterface(file.getAbsolutePath());\n+\n+            // copy original exif data to the output exif...\n+            // unfortunately, this Android ExifInterface class doesn't understand all the tags so we lose some\n+            for (Directory directory : originalImageMetaData().getDirectories()) {\n+                for (Tag tag : directory.getTags()) {\n+                    int tagType = tag.getTagType();\n+                    Object object = directory.getObject(tagType);\n+                    exif.setAttribute(tag.getTagName(), object.toString());\n+                }\n+            }\n+\n+            writeLocationExifData(options, exif);\n+\n+            if(hasBeenReoriented)\n+                rewriteOrientation(exif);\n+\n+            exif.saveAttributes();\n+        } catch (ImageProcessingException  | IOException e) {\n+            Log.e(TAG, \"failed to save exif data\", e);\n+        }\n+    }\n+\n+    private void rewriteOrientation(ExifInterface exif) {\n+        exif.setAttribute(ExifInterface.TAG_ORIENTATION, String.valueOf(ExifInterface.ORIENTATION_NORMAL));\n+    }\n+\n+    private void writeLocationExifData(ReadableMap options, ExifInterface exif) {\n+        if(!options.hasKey(\"metadata\"))\n+            return;\n+\n+        ReadableMap metadata = options.getMap(\"metadata\");\n+        if (!metadata.hasKey(\"location\"))\n+            return;\n+\n+        ReadableMap location = metadata.getMap(\"location\");\n+        if(!location.hasKey(\"coords\"))\n+            return;\n+\n+        try {\n+            ReadableMap coords = location.getMap(\"coords\");\n+            double latitude = coords.getDouble(\"latitude\");\n+            double longitude = coords.getDouble(\"longitude\");\n+\n+            GPS.writeExifData(latitude, longitude, exif);\n+        } catch (IOException e) {\n+            Log.e(TAG, \"Couldn't write location data\", e);\n+        }\n+    }\n+\n+    private Metadata originalImageMetaData() throws ImageProcessingException, IOException {\n+        if(this.originalImageMetaData == null) {//this is expensive, don't do it more than once\n+            originalImageMetaData = ImageMetadataReader.readMetadata(\n+                    new BufferedInputStream(new ByteArrayInputStream(originalImageData)),\n+                    originalImageData.length\n+            );\n+        }\n+        return originalImageMetaData;\n+    }\n+\n+    private static byte[] toJpeg(Bitmap bitmap, int quality) throws OutOfMemoryError {\n+        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+        bitmap.compress(Bitmap.CompressFormat.JPEG, quality, outputStream);\n+\n+        try {\n+            return outputStream.toByteArray();\n+        } finally {\n+            try {\n+                outputStream.close();\n+            } catch (IOException e) {\n+                Log.e(TAG, \"problem compressing jpeg\", e);\n+            }\n+        }\n+    }\n+\n+    public static class ImageMutationFailedException extends Exception {\n+        public ImageMutationFailedException(String detailMessage, Throwable throwable) {\n+            super(detailMessage, throwable);\n+        }\n+\n+        public ImageMutationFailedException(String detailMessage) {\n+            super(detailMessage);\n+        }\n+    }\n+\n+    private static class GPS {\n+        public static void writeExifData(double latitude, double longitude, ExifInterface exif) throws IOException {\n+            exif.setAttribute(ExifInterface.TAG_GPS_LATITUDE, toDegreeMinuteSecods(latitude));\n+            exif.setAttribute(ExifInterface.TAG_GPS_LATITUDE_REF, latitudeRef(latitude));\n+            exif.setAttribute(ExifInterface.TAG_GPS_LONGITUDE, toDegreeMinuteSecods(longitude));\n+            exif.setAttribute(ExifInterface.TAG_GPS_LONGITUDE_REF, longitudeRef(longitude));\n+        }\n+\n+        private static String latitudeRef(double latitude) {\n+            return latitude < 0.0d ? \"S\" : \"N\";\n+        }\n+\n+        private static String longitudeRef(double longitude) {\n+            return longitude < 0.0d ? \"W\" : \"E\";\n+        }\n+\n+        private static String toDegreeMinuteSecods(double latitude) {\n+            latitude = Math.abs(latitude);\n+            int degree = (int) latitude;\n+            latitude *= 60;\n+            latitude -= (degree * 60.0d);\n+            int minute = (int) latitude;\n+            latitude *= 60;\n+            latitude -= (minute * 60.0d);\n+            int second = (int) (latitude * 1000.0d);\n+\n+            StringBuffer sb = new StringBuffer();\n+            sb.append(degree);\n+            sb.append(\"/1,\");\n+            sb.append(minute);\n+            sb.append(\"/1,\");\n+            sb.append(second);\n+            sb.append(\"/1000,\");\n+            return sb.toString();\n+        }\n+    }\n+}\ndiff --git a/android/src/main/java/org/reactnative/camera/CameraModule.java b/android/src/main/java/org/reactnative/camera/CameraModule.java\nnew file mode 100644\nindex 0000000..90e0c1e\n--- /dev/null\n+++ b/android/src/main/java/org/reactnative/camera/CameraModule.java\n@@ -0,0 +1,211 @@\n+package org.reactnative.camera;\n+\n+import android.content.Context;\n+\n+import org.reactnative.facedetector.ExpoFaceDetector;\n+import com.facebook.react.bridge.Arguments;\n+import com.facebook.react.bridge.Promise;\n+import com.facebook.react.bridge.ReactApplicationContext;\n+import com.facebook.react.bridge.ReactContextBaseJavaModule;\n+import com.facebook.react.bridge.ReactMethod;\n+import com.facebook.react.bridge.ReadableMap;\n+import com.facebook.react.bridge.WritableArray;\n+import com.google.android.cameraview.AspectRatio;\n+import com.google.zxing.BarcodeFormat;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import javax.annotation.Nullable;\n+\n+public class CameraModule extends ReactContextBaseJavaModule {\n+  private static final String TAG = \"CameraModule\";\n+\n+  private static ReactApplicationContext mReactContext;\n+\n+//  private static ScopedContext mScopedContext;\n+  static final int VIDEO_2160P = 0;\n+  static final int VIDEO_1080P = 1;\n+  static final int VIDEO_720P = 2;\n+  static final int VIDEO_480P = 3;\n+  static final int VIDEO_4x3 = 4;\n+\n+  public static final Map<String, Object> VALID_BARCODE_TYPES =\n+      Collections.unmodifiableMap(new HashMap<String, Object>() {\n+        {\n+          put(\"aztec\", BarcodeFormat.AZTEC.toString());\n+          put(\"ean13\", BarcodeFormat.EAN_13.toString());\n+          put(\"ean8\", BarcodeFormat.EAN_8.toString());\n+          put(\"qr\", BarcodeFormat.QR_CODE.toString());\n+          put(\"pdf417\", BarcodeFormat.PDF_417.toString());\n+          put(\"upc_e\", BarcodeFormat.UPC_E.toString());\n+          put(\"datamatrix\", BarcodeFormat.DATA_MATRIX.toString());\n+          put(\"code39\", BarcodeFormat.CODE_39.toString());\n+          put(\"code93\", BarcodeFormat.CODE_93.toString());\n+          put(\"interleaved2of5\", BarcodeFormat.ITF.toString());\n+          put(\"codabar\", BarcodeFormat.CODABAR.toString());\n+          put(\"code128\", BarcodeFormat.CODE_128.toString());\n+          put(\"maxicode\", BarcodeFormat.MAXICODE.toString());\n+          put(\"rss14\", BarcodeFormat.RSS_14.toString());\n+          put(\"rssexpanded\", BarcodeFormat.RSS_EXPANDED.toString());\n+          put(\"upc_a\", BarcodeFormat.UPC_A.toString());\n+          put(\"upc_ean\", BarcodeFormat.UPC_EAN_EXTENSION.toString());\n+      ",