: "diff --git a/src/com/facebook/buck/json/buck.py b/src/com/facebook/buck/json/buck.py\nindex 1b4e1ae4b2..fb8b6c6471 100644\n--- a/src/com/facebook/buck/json/buck.py\n+++ b/src/com/facebook/buck/json/buck.py\n@@ -421,23 +421,6 @@ def get_base_path(build_env=None):\n     return build_env.base_path\n \n \n-@provide_for_build\n-def add_deps(name, deps=[], build_env=None):\n-    assert build_env.type == BuildContextType.BUILD_FILE, (\n-        \"Cannot use `add_deps()` at the top-level of an included file.\")\n-\n-    if name not in build_env.rules:\n-        raise ValueError(\n-            'Invoked \\'add_deps\\' on non-existent rule %s.' % name)\n-\n-    rule = build_env.rules[name]\n-    if 'deps' not in rule:\n-        raise ValueError(\n-            'Invoked \\'add_deps\\' on rule %s that has no \\'deps\\' field'\n-            % name)\n-    rule['deps'] = rule['deps'] + deps\n-\n-\n GENDEPS_SIGNATURE = re.compile(r'^#@# GENERATED FILE: DO NOT MODIFY ([a-f0-9]{40}) #@#\\n$')\n \n class BuildFileProcessor(object):\ndiff --git a/test/com/facebook/buck/parser/ParserTest.java b/test/com/facebook/buck/parser/ParserTest.java\nindex 2a562e58e0..2a23a11f09 100644\n--- a/test/com/facebook/buck/parser/ParserTest.java\n+++ b/test/com/facebook/buck/parser/ParserTest.java\n@@ -1204,45 +1204,6 @@ public class ParserTest {\n     assertEquals(\"Should have not invalidated cache.\", 1, counter.calls);\n   }\n \n-  @Test\n-  public void testGeneratedDeps() throws Exception {\n-    // Execute buildTargetGraphForBuildTargets() with a target in a valid file but a bad rule name.\n-    tempDir.newFolder(\"java\", \"com\", \"facebook\", \"generateddeps\");\n-\n-    Path testGeneratedDepsBuckFile = tempDir.newFile(\"java/com/facebook/generateddeps/BUCK\");\n-    Files.write(\n-        testGeneratedDepsBuckFile,\n-        (\"java_library(name = 'foo')\\n\" +\n-            \"java_library(name = 'bar')\\n\" +\n-            \"add_deps(name = 'foo', deps = [':bar'])\\n\").getBytes(UTF_8));\n-\n-    BuildTarget fooTarget = BuildTarget.builder(\n-        tempDir.getRoot().toRealPath(),\n-        \"//java/com/facebook/generateddeps\",\n-        \"foo\").build();\n-\n-    BuildTarget barTarget = BuildTarget.builder(\n-        tempDir.getRoot().toRealPath(),\n-        \"//java/com/facebook/generateddeps\",\n-        \"bar\").build();\n-    Iterable<BuildTarget> buildTargets = ImmutableList.of(fooTarget, barTarget);\n-\n-    TargetGraph targetGraph = parser.buildTargetGraph(\n-        eventBus,\n-        cell,\n-        false,\n-        executorService,\n-        buildTargets);\n-    BuildRuleResolver resolver = buildActionGraph(eventBus, targetGraph);\n-\n-    BuildRule fooRule = resolver.requireRule(fooTarget);\n-    assertNotNull(fooRule);\n-    BuildRule barRule = resolver.requireRule(barTarget);\n-    assertNotNull(barRule);\n-\n-    assertEquals(ImmutableSet.of(barRule), fooRule.getDeps());\n-  }\n-\n   @Test\n   public void whenAllRulesAreRequestedWithDifferingIncludesThenRulesAreParsedTwice()\n       throws BuildFileParseException, BuildTargetException, IOException, InterruptedException {",